{{- range $pod := .Values.pods }}
---
apiVersion: v1
kind: Pod
metadata:
  name: {{ $pod.name }}
  labels:
    app: {{ $pod.name }}
  annotations:
     k8s.v1.cni.cncf.io/networks: |
      [
        {{- $index := 0 }}
        {{- range $net := $pod.networks }}
          {{- if $index }},{{ end }}
          { "name": "{{ $net.name }}", "interface": "{{ $net.iface }}" }
          {{- $index = add $index 1 }}
        {{- end }}
      ]
spec:
  nodeSelector:
    kubernetes.io/hostname: {{ $.Values.node.name }}
  containers:
    - name: {{ $pod.name }}
      image: {{ $pod.image }}
      imagePullPolicy: IfNotPresent
      securityContext:
        allowPrivilegeEscalation: true
        capabilities:
          add:
            - SYS_ADMIN
        seccompProfile:
          type: Unconfined
        privileged: true
      resources:
        requests:
          cpu: "100m"
          memory: "256Mi"
        limits:
          cpu: "500m"
          memory: "512Mi"
  imagePullSecrets:
    - name: harbor-secret
---
apiVersion: v1
kind: Service
metadata:
  name: {{ $pod.name }}
spec:
  type: NodePort
  selector:
    app: {{ $pod.name }}
  ports:
    - name: novnc
      protocol: TCP
      port: 6080
      targetPort: 6080
---
{{- end }}
{{- range $router := .Values.routers }}
apiVersion: v1
kind: Pod
metadata:
  name: {{ $router.name }}
  labels:
    app: {{ $router.name }}
  annotations:
    k8s.v1.cni.cncf.io/networks: |
      [
        {{- $index := 0 }}
        {{- range $key, $net := $router.networks }}
          {{- if $index }},{{ end }}
          { "name": "{{ $net.name }}", "interface": "net{{ add $index 1 }}" }
          {{- $index = add $index 1 }}
        {{- end }}
      ]
spec:
  nodeSelector:
    kubernetes.io/hostname: {{ $.Values.node.name }}
  securityContext:
    sysctls:
      - name: net.ipv4.conf.net1.rp_filter
        value: "0"
      - name: net.ipv4.conf.all.rp_filter
        value: "0"
      - name: net.ipv4.conf.default.rp_filter
        value: "0"
      - name: net.ipv4.ip_forward
        value: "1"
  containers:
    - name: {{ $router.name }}
      image: {{ $router.image }}
      imagePullPolicy: IfNotPresent
      securityContext:
        allowPrivilegeEscalation: true
        capabilities:
          add:
            - SYS_ADMIN
        seccompProfile:
          type: Unconfined
        privileged: true
      resources:
        requests:
          cpu: "100m"
          memory: "256Mi"
        limits:
          cpu: "500m"
          memory: "512Mi"
  imagePullSecrets:
    - name: harbor-secret
---
apiVersion: v1
kind: Service
metadata:
  name: {{ $router.name }}
spec:
  type: NodePort
  selector:
    app: {{ $router.name }}
  ports:
    - name: novnc
      protocol: TCP
      port: 6080
      targetPort: 6080
---
{{- end }}

